{"version":3,"sources":["components/FilmItem/filmItem.js","components/FilmItem/filmItem.module.css","components/Searchbar/searchbar.module.css","pages/detailsPage.js","components/Searchbar/searchbar.js","pages/movies.js"],"names":["FilmItem","movie","useState","cast","setCast","review","setReview","setErrors","moviesId","useParams","history","useHistory","location","useLocation","url","useRouteMatch","base_url","poster_path","tagline","overview","title","release_date","vote_average","genres","releaseDate","Date","useEffect","API","FetchMovieCredits","then","catch","errors","FetchMovieReview","type","onClick","push","state","from","className","s","details","src","alt","poster","detailsInfo","getFullYear","vote","titleOverview","titleGenres","map","name","genresName","id","additional","infoLinks","infoLinksItem","to","pathname","path","castName","profile_path","castPoster","character","credit_id","results","length","reviewName","author","content","module","exports","MovieDetails","setDetails","FetchMovieDetails","Searchbar","handleSubmit","handleChange","search","searchbar","onSubmit","searchForm","searchFormButton","searchFormButtonLabel","searchFormInput","onChange","placeholder","oldPage","Movies","setSearch","loading","setLoading","searchMovie","setSearchMovie","e","preventDefault","trim","FetchMovie","console","log","target","value"],"mappings":"0PAOe,SAASA,EAAT,GAA8B,IAAVC,EAAS,EAATA,MAC/B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA4BJ,mBAAS,MAArC,mBAAeK,GAAf,WACA,EAAsCL,mBAAS,IAA/C,mBACOM,GADP,UACmBC,cAAZD,UACDE,EAAUC,cACVC,EAAWC,cACVC,EAAOC,cAAPD,IAEDE,EAAW,kCAEVC,EAA6EhB,EAA7EgB,YAAaC,EAAgEjB,EAAhEiB,QAASC,EAAuDlB,EAAvDkB,SAAUC,EAA6CnB,EAA7CmB,MAAOC,EAAsCpB,EAAtCoB,aAAcC,EAAwBrB,EAAxBqB,aAAcC,EAAUtB,EAAVsB,OAEpEC,EAAY,IAAIC,KAAKJ,GAG3BK,qBAAU,WACNC,IAAIC,kBAAkBpB,GAAUqB,MAAK,SAAA1B,GACjCC,EAASD,MAIZ2B,OAAM,SAAAC,GACHxB,EAAU,wIAGd,IAEFmB,qBAAU,WACVC,IAAIK,iBAAiBxB,GAAUqB,MAAK,SAAAxB,GAClCC,EAAWD,QAGb,IAMN,OACI,gCACA,wBAAQ4B,KAAK,SAASC,QAPL,WAAO,IAAD,EACnBxB,EAAQyB,KAAR,OAAavB,QAAb,IAAaA,GAAb,UAAaA,EAAUwB,aAAvB,aAAa,EAAiBC,OAMlC,kBACA,sBAAKC,UAAWC,IAAEC,QAAlB,UACA,qBAAKC,IAAOzB,EAAWC,EAAeyB,IAAKxB,EAASoB,UAAWC,IAAEI,SACjE,sBAAKL,UAAWC,IAAEK,YAAlB,UACA,qBAAIN,UAAWC,IAAEnB,MAAjB,UAAyBA,EAAzB,KAAkCI,EAAYqB,cAA9C,QACA,oBAAGP,UAAWC,IAAEO,KAAhB,yBAAmCxB,KACnC,oBAAIgB,UAAWC,IAAEQ,cAAjB,sBACA,mBAAGT,UAAWC,IAAEpB,SAAhB,SAA2BA,IAC3B,oBAAImB,UAAWC,IAAES,YAAjB,oBACA,oBAAIV,UAAaC,IAAEhB,OAAnB,SACKA,EAAO0B,KAAK,SAAAC,GAAI,OACb,oBAAIZ,UAAaC,IAAEY,WAAnB,SAA8CD,EAAKA,MAAfA,EAAKE,eAKjD,sBAAKd,UAAWC,IAAEc,WAAlB,UACA,uDACA,qBAAIf,UAAWC,IAAEe,UAAjB,UACI,cAAC,IAAD,CAAShB,UAAWC,IAAEgB,cAAeC,GAAI,CAACC,SAAS,GAAD,OAAI3C,EAAJ,SAAesB,MAAM,CAACC,KAAMzB,IAA9E,kBACA,cAAC,IAAD,CAAS0B,UAAWC,IAAEgB,cAAeC,GAAI,CAACC,SAAS,GAAD,OAAI3C,EAAJ,WAAiBsB,MAAM,CAACC,KAAMzB,IAAhF,2BAGCT,GACG,cAAC,IAAD,CAAOuD,KAAI,UAAQ5C,EAAR,SAAX,SACI,oBAAIwB,UAAaC,IAAEpC,KAAnB,SACKA,EAAKA,KAAK8C,KAAK,SAAAC,GAAI,OACpB,qBAAIZ,UAAaC,IAAEoB,SAAnB,UACKT,EAAKU,cAAgB,qBAAKnB,IAAOzB,EAAQ,UAAMkC,EAAKU,cAAkBlB,IAAG,UAAKQ,EAAKA,MAAQZ,UAAWC,IAAEsB,aACxGX,EAAKA,KACLA,EAAKY,WAAa,4CAAeZ,EAAKY,eAHTZ,EAAKa,kBASlD1D,GACG,cAAC,IAAD,CAAOqD,KAAI,UAAQ5C,EAAR,WAAX,SAC6B,IAAxBT,EAAO2D,QAAQC,OAChB,oBAAI3B,UAAaC,IAAElC,OAAnB,SACKA,EAAO2D,QAAQf,KAAK,SAAAC,GAAI,OACzB,qBAAIZ,UAAaC,IAAE2B,WAAnB,UACI,yCAAYhB,EAAKiB,UACjB,4BAAIjB,EAAKkB,YAFuBlB,EAAKE,SAM5C,gF,mBC/FjBiB,EAAOC,QAAU,CAAC,QAAU,0BAA0B,OAAS,yBAAyB,YAAc,8BAA8B,OAAS,yBAAyB,WAAa,6BAA6B,WAAa,6BAA6B,UAAY,4BAA4B,cAAgB,gCAAgC,WAAa,+B,mBCA/VD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,gBAAkB,qC,gICIjO,SAASC,IAExB,IAAO/D,EAAYC,cAAZD,SACP,EAA8BN,mBAAS,IAAvC,mBAAOsC,EAAP,KAAgBgC,EAAhB,KASA,OAPE9C,qBAAU,WACRC,IAAI8C,kBAAkBjE,GAAUqB,MAAK,SAAA5B,GACjCuE,EAAYvE,QAGhB,IAGFuC,GAAY,cAAC,IAAD,CAAUvC,MAASuC,M,iGCflB,SAASkC,EAAT,GAA6D,IAAxCC,EAAuC,EAAvCA,aAAeC,EAAwB,EAAxBA,aAAwB,EAAVC,OAE/D,OAEE,wBAAQvC,UAAWC,IAAEuC,UAArB,SACE,uBAAMC,SAAUJ,EAAcrC,UAAWC,IAAEyC,WAA3C,UACE,wBAAQ/C,KAAK,SAASK,UAAWC,IAAE0C,iBAAnC,SACE,sBAAM3C,UAAWC,IAAE2C,sBAAnB,sBAEF,uBACE5C,UAAWC,IAAE4C,gBACblD,KAAK,OACLmD,SAAUR,EACVS,YAAY,sB,ICPlBC,E,uCA0DgBC,UAzDJ,WAEZ,MAA4BrF,mBAAS,IAArC,mBAAO2E,EAAP,KAAeW,EAAf,KACA,EAA8BtF,oBAAS,GAAvC,mBAAOuF,EAAP,KAAgBC,EAAhB,KAEA,EAAsCxF,mBAAS,IAA/C,mBAAOyF,EAAP,KAAoBC,EAApB,KACA,EAA4B1F,mBAAS,MAArC,mBACMQ,GADN,UACgBC,eAiChB,OAZFe,qBAAU,WACRkE,EAAgBN,KAChB,CAAC5E,IAWK,gCACD,cAACgE,EAAD,CAAYG,OAAUA,EAAQF,aA5Bf,SAAAkB,GAClBA,EAAEC,iBACCjB,EAAOkB,SACRL,GAAW,GACb/D,IAAIqE,WAAWnB,GACZhD,MAAK,SAAA8D,GACJC,EAAgBD,GAChBL,EAAUK,EACVM,QAAQC,IAAI,IAAKZ,GACjB5E,EAAQyB,KAAR,iBAAuB0C,IACzBa,GAAW,QAkBkDd,aAhC5C,SAACiB,GACtBL,EAAUK,EAAEM,OAAOC,UAgCbX,GACF,8BACC,cAAC,IAAD,CACCxD,KAAO,OACPK,UAAU,aAIVqD,GACD,cAAC,IAAD,UACE,cAAC,IAAD,CAAkB1F,MAAS0F","file":"static/js/DetailsPage.13da4f04.chunk.js","sourcesContent":["import { NavLink, Route, useRouteMatch, useParams, useLocation, useHistory } from 'react-router-dom';\r\nimport { useState, useEffect, React } from 'react';\r\nimport MovieGalleryItem from '../movieGalleryItem/movieGalleryItem'\r\nimport MovieGallery from '../MovieGallery/movieGallery'\r\nimport API from '../../Fetch/fetch';\r\nimport s from './filmItem.module.css';\r\nlet old = []\r\nexport default function FilmItem ({movie})  {\r\n    const [cast, setCast] = useState('');\r\n    const [review, setReview] = useState('');\r\n    const [errors, setErrors] = useState(null);\r\n    const [searchMovie, setSearchMovie] = useState('');\r\n    const {moviesId} = useParams();\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const {url} = useRouteMatch();\r\n    \r\n    const base_url = 'https://image.tmdb.org/t/p/w500'\r\n    \r\n    const {poster_path, tagline, overview, title, release_date, vote_average, genres} = movie\r\n    \r\n    const releaseDate=new Date(release_date);\r\n    \r\n    \r\n    useEffect(() => {\r\n        API.FetchMovieCredits(moviesId).then(cast => {\r\n            setCast((cast));\r\n        },\r\n        \r\n        )\r\n        .catch(errors => {\r\n            setErrors('Информация отсутствует')\r\n            \r\n          });\r\n      },[])\r\n    \r\n      useEffect(() => {\r\n      API.FetchMovieReview(moviesId).then(review => {\r\n        setReview((review));\r\n      },\r\n      )\r\n    },[])\r\n    const OnGoBack = () => {\r\n        history.push(location?.state?.from)\r\n    }\r\n \r\n        \r\nreturn (\r\n    <div>\r\n    <button type='button' onClick = {OnGoBack}>Back</button>\r\n    <div className={s.details}>\r\n    <img src = {base_url + poster_path}   alt={tagline} className={s.poster}/>\r\n    <div className={s.detailsInfo}>\r\n    <h2 className={s.title}>{title} ({releaseDate.getFullYear()}) </h2>\r\n    <p className={s.vote}>User Score: {vote_average}</p>\r\n    <h3 className={s.titleOverview}>Overview</h3>\r\n    <p className={s.overview}>{overview}</p>\r\n    <h4 className={s.titleGenres}>Genres</h4>\r\n    <ul className = {s.genres}>\r\n        {genres.map (name=>(\r\n            <li className = {s.genresName} key={name.id}>{name.name}</li>\r\n        ))}\r\n    </ul>\r\n    </div>\r\n    </div>\r\n    <div className={s.additional}>\r\n    <p>Additional information</p>\r\n    <ul className={s.infoLinks}>\r\n        <NavLink className={s.infoLinksItem} to={{pathname:`${url}/cast`,state:{from: location},}}>Cast</NavLink> \r\n        <NavLink className={s.infoLinksItem} to={{pathname:`${url}/review`,state:{from: location},}}>Reviews</NavLink> \r\n    </ul>\r\n    </div>\r\n        {cast &&\r\n            <Route path =  {`${url}/cast`}>\r\n                <ul className = {s.cast}>\r\n                    {cast.cast.map (name=>(\r\n                    <li className = {s.castName} key={name.credit_id}>\r\n                        {name.profile_path && <img src = {base_url + `${name.profile_path}`}   alt={`${name.name}`} className={s.castPoster}/>}\r\n                        {name.name}\r\n                        {name.character && <p>Character: {name.character}</p>} \r\n                    </li>\r\n                    ))}\r\n                </ul>\r\n            </Route>    \r\n        }\r\n        {review &&\r\n            <Route path =  {`${url}/review`}>\r\n                {review.results.length!==0 ?\r\n                <ul className = {s.review}>\r\n                    {review.results.map (name=>(\r\n                    <li className = {s.reviewName} key={name.id}>\r\n                        <h3>Auhor: {name.author}</h3>\r\n                        <p>{name.content}</p>\r\n                    </li> \r\n                    ))}\r\n                </ul>\r\n                :<p>We don't have any reviews for this movie</p>}\r\n            </Route>    \r\n        }\r\n    </div>\r\n)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"filmItem_details__237Vg\",\"poster\":\"filmItem_poster__3-iI5\",\"detailsInfo\":\"filmItem_detailsInfo__2yz7c\",\"genres\":\"filmItem_genres___Anfq\",\"genresName\":\"filmItem_genresName__3Wyl5\",\"additional\":\"filmItem_additional__1koDo\",\"infoLinks\":\"filmItem_infoLinks__1RBOW\",\"infoLinksItem\":\"filmItem_infoLinksItem__yj1rk\",\"castPoster\":\"filmItem_castPoster__2UMTM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"searchbar_searchbar__23ex5\",\"searchForm\":\"searchbar_searchForm__SwE3e\",\"searchFormButton\":\"searchbar_searchFormButton__24gg3\",\"searchFormButtonLabel\":\"searchbar_searchFormButtonLabel__31b9z\",\"searchFormInput\":\"searchbar_searchFormInput__FQfCf\"};","import { useState, useEffect, React } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport API from '../Fetch/fetch';\r\nimport FilmItem from '../components/FilmItem/filmItem'\r\n\r\nexport default function MovieDetails () {\r\n    \r\nconst {moviesId} = useParams();\r\nconst [details, setDetails] = useState('');\r\n \r\n  useEffect(() => {\r\n    API.FetchMovieDetails(moviesId).then(movie => {\r\n        setDetails((movie));\r\n    },\r\n    )\r\n  },[])\r\n\r\nreturn (\r\n  details &&  <FilmItem movie= {(details)}  /> \r\n)\r\n}","import React from 'react';\r\nimport s from './searchbar.module.css';\r\n\r\nexport default function Searchbar ({handleSubmit,  handleChange, search})  {\r\n  \r\n  return(\r\n\r\n    <header className={s.searchbar}>\r\n      <form onSubmit={handleSubmit} className={s.searchForm}>\r\n        <button type=\"submit\" className={s.searchFormButton}>\r\n          <span className={s.searchFormButtonLabel}>Search</span>\r\n        </button>\r\n        <input\r\n          className={s.searchFormInput}\r\n          type=\"text\"\r\n          onChange={handleChange} \r\n          placeholder=\"Search movie\"\r\n        />\r\n      </form>\r\n    </header>\r\n    \r\n  )\r\n}","import { React, useState, useEffect } from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport API from '../Fetch/fetch';\r\nimport Searchbar from '../components/Searchbar/searchbar';\r\nimport MovieGallery from '../components/MovieGallery/movieGallery'\r\nimport MovieGalleryItem from '../components/movieGalleryItem/movieGalleryItem'\r\nimport Loader from 'react-loader-spinner'\r\nimport Old from '../components/FilmItem/filmItem'\r\n\r\nlet oldPage\r\n const Movies = () => {\r\n    \r\n    const [search, setSearch] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [searchMovie, setSearchMovie] = useState('');\r\n    const [errors, setErrors] = useState(null);\r\n    const history = useHistory()\r\n\r\n\r\n    const handleChange = (e) => {\r\n    setSearch(e.target.value )\r\n    } \r\n  \r\n   const handleSubmit = e => {\r\n      e.preventDefault();\r\n      if(search.trim()){\r\n        setLoading(true)\r\n      API.FetchMovie(search)\r\n        .then(searchMovie =>  {\r\n          setSearchMovie((searchMovie))\r\n          oldPage = searchMovie\r\n          console.log(111, oldPage);\r\n          history.push(`?query=${search}`) \r\n        setLoading(false)}, \r\n          )\r\n        }\r\n  };\r\n  useEffect(() => {\r\n    setSearchMovie((oldPage))\r\n  },[history])\r\n\r\n  /* useEffect(() => {\r\n    API.FetchMovie(search)\r\n        .then(searchMovie =>  {\r\n          setSearchMovie((searchMovie))\r\n    console.log(101, search);\r\n    console.log(\"history\", history);\r\n  })},[history]) */\r\n\r\n    return (\r\n          <div>  \r\n         <Searchbar  search = {search} handleSubmit ={handleSubmit}  handleChange={handleChange} />\r\n         {loading && \r\n        <div>\r\n         <Loader \r\n          type={ 'Puff'}\r\n          className='loader'>\r\n        </Loader>\r\n        </div>}\r\n\r\n         {searchMovie &&\r\n         <MovieGallery>\r\n           <MovieGalleryItem movie= {(searchMovie)} /> \r\n         </MovieGallery>}\r\n         </div>\r\n    )}\r\n    export default  Movies"],"sourceRoot":""}